把结构内容保存到文件中
存储记录最没有效率得方法是fprintf（）
很容易出现问题，笨拙
更好的方法，
使用fread（）和fwrite（）函数读写结构大小的单元
fwrite（&primer， sizeof(struct book), 1, pbooks）;
以而兼职表示法存储数据的缺点是，不同的系统可能使用不同的二进制表示法，
数据文件可能不具有可移植性，不同编译器设置可能导致不同二进制布局

联合是一种数据类型，他能在一个内存空间中存储不同的数据类型

联合的创建方式和结构相同（union）
声明的联合只能存其中的一种类型值
一个联合只能存一个值
编译器分配足够的空间以便他能储存联合声明中占用最大字节的类型


枚举类型，声明符号名称表示整型常量，enum，
目的，提高程序可读性
枚举花括号内可能有的值
花括号内通常称为枚举符
枚举变量可以是任意整数类型

c允许枚举变量使用++运算符，c++不允许
如果编写的代码将来会并入c++程序
枚举变量声明为int类型，才能都兼容
枚举符类似为常量，一经定义，不可更改

在switch中，可以吧枚举常量作为标签
默认情况下，枚举列表中的值被赋值为0，1，2，3，4等
可以在定义时为其赋值
枚举类型只能在内部使用

c使用名称空间标识程序中的各部分
两个不同作用域的同名变量不冲突，两个作用域相同的同名变量冲突

typedef 为某一类型自定义名称

可用于结构
typedef struct room{
	int x;
	int y;
}ROOM;
ROOM room1;
更简洁，可以省略结构标签

typedef常用于给复杂类型命名

不会创建新类型，只是给某个类型起别名

其他复杂的声明
（）,[]优先级相同，高于*	从左向右结合

char* frump(int);		返回字符指针的函数
char(* frump)(int);		指向函数的指针

函数和指针
指向另一个函数的指针
函数指针常用作另一个函数的参数，告诉该函数要使用哪一个参数
指向函数的指针中存储着函数代码的起始处的地址

->	间接成员运算符
.	成员运算符




















