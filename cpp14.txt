条件运算符
需要三个运算对象，三元运算符
x = (y > 0) ? -y : y;
根据问号前的判断为真或假给x赋值为y或-y

continue	,跳出当前循环，
break		,终止当前循环，一层

Switch和break；类似if ，else if，lse
switch(x){
case 1:   break;
case 2:   break;
default:  (break;)
多重case标签，case后不接break

goto
if(ibex > 14)
	goto a;
	sheds = 2;
	goto b;
	a:sheds = 3;
	b:help = 2 * sheds;

字符输入/输出；
单字符i/o：getchar(),putchar(),每次只处理一个字符

缓冲区
在用户按下enter之前不会打印刚输入的字符，缓冲输入
用户输入的字符串被储存在缓冲区（buffer）的临时存储区
缓存区，更节约时间，可修改错误
完全缓冲I/O,缓冲区被填满时刷新，常见512字节和4096字节
行缓冲I/O,出现换行时刷新缓冲区，键盘输入通常是行缓冲输入

无缓冲，输入立即响应；游戏
回显无缓冲输入的getche（）和getch（）
原型在conio.h头文件中

不同系统存储文件方式不同
使用标准I/o包，就可以不必考虑这些差异，i/o函数会自动进行转换

c程序处理的是流而不是直接处理文件
流是一个实际输入或输出映射的理想化数据流
 
文件结尾，	在文件末尾放一个特殊的字符标记文件结尾，
ctrl + z，
记录文件大小
用getchar()读取到文件末尾时返回一个特殊值，EOF （-1）
unix，linux在一行开始处按下ctrl+d，会传输文件结尾信号

重定向和文件
程序本身并不关心输入的内容是来自文件还是键盘，只知道这是需要导入的字符流
，读取这些内容并把字符逐个打印在屏幕上
<符号，重定向运算符

win + r
d:
cd D:\Desktop\"c&&c++"\"笔记本"\"附件"
14.1.exe<fff.txt
14.1.exe>fff.f.txt

统一命令中，输入文件名和输出文件名不能相同
a>b<c,	可以
a<b>b，	不可以

使用重定向运算符<,>时遵循原则
连接一个可执行程序和一个数据文件
不能用于连接两个数据文件或两个程序
重定向运算符不能读取多个文件的输入，也不能把输出定向至多个文件
>>,	把数据添加到现有文件的末尾
|，	把一个文件的输出连接到另一个文件的输入

用程序直接打开文件

创建友好的用户界面
交互数据输入更方便，减少错误输入的影响

getchar（）读取每个字符，scanf（）跳过空格等









