char为有符号类型，可表示范围是-128~127
有些c编译器把char实现为无符号类型，0~255
c90标准，c允许在关键字char前面使用signed或unsigned，
这在用char类型处理小整数时很有用
如果char只处理字符，那么char前无需任何修饰符

bool类型，true，false，

float，double，long double
科学计数法，指数计数法（e计数法）
float类型必须至少能表示6位有效数字，取值范围至少是1e-37~1e37,
即float类型必须至少精确表示小数点后的6位有效数字
通常系统存储一个浮点数要32位，8位表示指数和符号，24位表非指数部分及其符号

double（双精度）一般情况下占用64位，至少必须表示10位有效数字
规范浮点数的写法，增强可读性，例3.0E-2；
		//不要再E前加空格
默认情况下，编译器假定浮点型常量是doublue类型的精度
在浮点数后面加上f或F后缀可覆盖默认设置，编译器会将浮点型常量看做float类型，例，2.3f，9,11E+9F
使用l或L后缀使得数字成为long double类型，例54.3l，4.32L（建议使用L）
	c99标准添加一种新的浮点型常量格式，
	十六进制表示浮点型常量，十六进制数前加上前缀0x或0X，
	p和P代替e，E，用2的幂代替10的幂。例0xa.fp10,对应十进制10364.0
printf（）函数使用%f转换说明打印十进制计数法的float和double类型浮点数，
用%e打印指数计数法的浮点数，如果系统支持十六进制格式的浮点数，可用a和A分别表示e和E
打印long double型要使用%Lf,%Le,%La,转换说明，给那些未在函数原型中显示说明参数类型的函数，
传递参数时，c编译器会把float类型的值自动转成double类型
	%f，%lf, %e科学计数法（e计数法）, %a，十六进制（p计数法）
float a = 32000.0F，结尾加f或F，防止精度缺失，，因为会优先将32000.0存储为double型，存为float可能会精度缺失
long double是c99标准，很多编译器可能不满足；

浮点值的上溢和下溢，
计算导致数字过大，超过当前类型能表达的范围时，上溢
float toobing = 3.4e38 * 100.0f;
printf("\ntob = %lf	tob(e) = %le\n",toobing,toobing);
//tob = 1.#INF00  tob(e) = 1.#INF00e+000

除以一个很小的数，情况更复杂，下溢

上溢和下溢都会导致数值异常
特殊浮点值NaN，例，给（正弦）asin（）函数传递一个值，如果大于1，则返回NaN

浮点数舍入错误，计算机缺少足够的小数位来完成正确的运算
float a,b;
b = 2.0e+20 + 1.0;
a = b - 2.0e+20;
printf("\n%f\n",a);
//4008175468544.000000
原因float类型数字通常只能按指数比例放大或缩小6或其位有效数字，上面发送变化是21位，结果一定错误
IEEE标准，，，

其他类型
数组，指针（重点），结构，联合
类型大小（sizeof（）），c语言内置运算符
%zd
	//使用正确的数据类型

参数和陷阱
确保转换说明的数量，类型与后面参数的数量，类型相匹配。
刷新输出，缓冲区（buffer）





