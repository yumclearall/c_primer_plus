从硬件方面看，被存储的每个值都占用一定的物理内存
c语言把这样的一块内存称为对象
c,面向过程

int* pt = &entity;
int ranks[10];
pt是一个标识符，指定了一个存储地址的对象
*pt不是标识符，他指定了一个对象
entity既是标识符也是左值，
ranks + 2 * entity 既不是标识符，也不是左值，不是名称，不指定内存位置上的内容
*（ranks +2 * entity）是一个左值，指定了特定内存位置的值

存储期指对象在内存中保留了多长时间
标识符用于访问对象，可以用作用域和链接描述标识符

作用域描述程序中可访问标识符的区域
块作用域，函数作用域，函数原型作用域，文件作用域

块 是一对花括号括起来的代码区域，块内定义的变量只能在块内使用
定义在块中的变量具有块作用域，仅局限于该声明所在的块

函数作用域 只用于goto语句的标签，即使一个标签首次出现在函数的内层块中，他的作用域也衍射至整个函数

函数原型作用域 用于函数原型中的形参名，
函数原型作用域的范围是从形参定义处到原型声明结束
编译器在处理函数原型中的形参时只关心他的类型，形参名通常无关紧要
即使有形参名也不必参与函数定义中的形参名相匹配，只有在边长数组中，形参名才有用

变量的定义在函数的外面，具有文件作用域，
具有文件作用域的变量，从他的定义处到该定义所在的文件末尾均可见
（全局变量），具有外部链接文件作用域，这样的变量可用于多个函数

















